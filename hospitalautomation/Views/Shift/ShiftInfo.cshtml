@model List<hospitalautomation.Models.Shift>

@{
    ViewData["Title"] = "ShiftInfo";
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
            height: 100%;
        }

  
        .calendar-container {
            margin: 40px auto; 
            width: 100%; 
            max-width: 1200px; 
            overflow-x: hidden; 
        }

        .calendar {
            width: 100%;
            table-layout: fixed;
            border-collapse: collapse;
        }

        .calendar th {
            text-align: center;
            padding: 8px;
            background-color: #007bff;
            color: white;
            font-weight: bold;
            border: 1px solid #ddd;
        }

        .calendar td {
            border: 1px solid #e0e0e0;
            text-align: left;
            vertical-align: top;
            padding: 5px;
            position: relative;
            width: 14.28%; 
            height: 80px; 
            background-color: #ffffff;
            transition: background-color 0.2s ease;
        }

        .calendar td:hover {
            background-color: #f9f9f9;
        }

        .calendar td::before {
            position: absolute;
            top: 2px;
            left: 2px;
            font-weight: bold;
            color: #333;
            font-size: 10px; 
        }

        .calendar .shift {
            margin-top: 5px;
            font-size: 10px; 
            background-color: #d9f9d9;
            padding: 2px 4px;
            border-radius: 4px;
            text-align: center;
        }


        .shift-detail {
            font-size: 10px; 
            color: #333;
            font-weight: bold;
        }

        .shift-detail span {
            display: block;
        }


        .calendar-header {
            text-align: center;
            margin-bottom: 20px;
            color: white;
        }

        
        .nav-buttons {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
        }
        
        .nav-buttons button {
            font-size: 16px; 
            padding: 8px 16px;
            margin: 5px;
        }

       
        .year-display {
            font-size: 20px; 
            color: white;
            font-weight: bold;
        }

    </style>
</head>
<body>
<div class="calendar-container">
    <div class="nav-buttons">
        <button class="btn btn-primary" onclick="changeMonth(-1)">Önceki Ay</button>
        <div class="year-display" id="monthDisplay">Ocak 2025</div>
        <button class="btn btn-primary" onclick="changeMonth(1)">Sonraki Ay</button>
    </div>

    <table class="calendar shadow" id="calendar">
        <thead>
            <tr>
                <th>Pzt</th>
                <th>Sal</th>
                <th>Çar</th>
                <th>Per</th>
                <th>Cum</th>
                <th>Cmt</th>
                <th>Paz</th>
            </tr>
        </thead>
        <tbody>

        </tbody>
    </table>
</div>

<script>
    let currentYear = new Date().getFullYear();
    let currentMonth = new Date().getMonth();

    const months = [
        "Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran",
        "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"
    ];

   
    const shifts = @Html.Raw(Json.Serialize(Model.Select(s => new {
        day = s.ShiftDate.Day,
        department = s.Department.Name,
        start = s.StartTime.ToString("HH:mm"),
        end = s.EndTime.ToString("HH:mm")
    })));

    function generateCalendar(year, month) {
        const calendarBody = document.querySelector("#calendar tbody");
        const monthDisplay = document.getElementById("monthDisplay");
        const firstDay = new Date(year, month, 1);
        const lastDay = new Date(year, month + 1, 0);

        monthDisplay.textContent = `${months[month]} ${year}`;
        calendarBody.innerHTML = '';

        let dayOfWeek = firstDay.getDay();
        if (dayOfWeek === 0) dayOfWeek = 7;

        let day = 1;
        let row = document.createElement('tr');

        for (let i = 1; i < dayOfWeek; i++) {
            row.appendChild(document.createElement('td'));
        }

        while (day <= lastDay.getDate()) {
            if (dayOfWeek > 7) {
                calendarBody.appendChild(row);
                row = document.createElement('tr');
                dayOfWeek = 1;
            }

            const td = document.createElement('td');
            td.textContent = day;

         
            const shiftDetails = shifts.filter(s => s.day === day);
            shiftDetails.forEach(shift => {
                const shiftDiv = document.createElement('div');
                shiftDiv.classList.add('shift');
                shiftDiv.innerHTML = `
                    <div style="font-size: 10px; background: #d9f9d9; padding: 2px; margin-top: 5px; border-radius: 4px;">
                        <strong>${shift.department}</strong><br>
                        ${shift.start} - ${shift.end}
                    </div>
                `;
                td.appendChild(shiftDiv);
            });

            row.appendChild(td);
            day++;
            dayOfWeek++;
        }

        calendarBody.appendChild(row);
    }

    function changeMonth(direction) {
        currentMonth += direction;
        if (currentMonth < 0) { currentMonth = 11; currentYear--; }
        else if (currentMonth > 11) { currentMonth = 0; currentYear++; }
        generateCalendar(currentYear, currentMonth);
    }

    generateCalendar(currentYear, currentMonth);
</script>
</body>
</html>